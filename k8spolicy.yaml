---
policy_id: "agent-policy-id-automated"
package:
  name: kubernetes
  version: 1.42.0
name: kubernetes-1
description: 'Test Policy that we automated'
namespace: default
inputs:
  kubelet-kubernetes/metrics:
    enabled: false
    streams:
      kubernetes.container:
        enabled: true
        vars:
          add_metadata: true
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://${env.NODE_NAME}:10250
          period: 10s
          ssl.verification_mode: none
          add_resource_metadata_config: |
            # add_resource_metadata:
            #   namespace:
            #     include_labels: ["namespacelabel1"]
            #   node:
            #     include_labels: ["nodelabel2"]
            #     include_annotations: ["nodeannotation1"]
            #   deployment: false
          ssl.certificate_authorities: []
      kubernetes.node:
        enabled: true
        vars:
          add_metadata: true
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://${env.NODE_NAME}:10250
          period: 10s
          ssl.verification_mode: none
          ssl.certificate_authorities: []
      kubernetes.pod:
        enabled: true
        vars:
          add_metadata: true
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://${env.NODE_NAME}:10250
          period: 10s
          ssl.verification_mode: none
          ssl.certificate_authorities: []
          add_resource_metadata_config: |
            # add_resource_metadata:
            #   namespace:
            #     include_labels: ["namespacelabel1"]
            #   node:
            #     include_labels: ["nodelabel2"]
            #     include_annotations: ["nodeannotation1"]
            #   deployment: false
      kubernetes.system:
        enabled: true
        vars:
          add_metadata: true
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://${env.NODE_NAME}:10250
          period: 10s
          ssl.verification_mode: none
          ssl.certificate_authorities: []
      kubernetes.volume:
        enabled: true
        vars:
          add_metadata: true
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://${env.NODE_NAME}:10250
          period: 10s
          ssl.verification_mode: none
          ssl.certificate_authorities: []
  kube-state-metrics-kubernetes/metrics:
    enabled: true
    streams:
      kubernetes.state_container:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
          add_resource_metadata_config: |
            # add_resource_metadata:
            #   namespace:
            #     include_labels: ["namespacelabel1"]
            #   node:
            #     include_labels: ["nodelabel2"]
            #     include_annotations: ["nodeannotation1"]
            #   deployment: false
      kubernetes.state_cronjob:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_daemonset:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_deployment:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_job:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_node:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_persistentvolume:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_persistentvolumeclaim:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_pod:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
          add_resource_metadata_config: |
            # add_resource_metadata:
            #   namespace:
            #     include_labels: ["namespacelabel1"]
            #   node:
            #     include_labels: ["nodelabel2"]
            #     include_annotations: ["nodeannotation1"]
            #   deployment: false
      kubernetes.state_replicaset:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_resourcequota:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_service:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_statefulset:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
      kubernetes.state_storageclass:
        enabled: true
        vars:
          add_metadata: true
          hosts:
          - kube-state-metrics:8080
          leaderelection: true
          period: 10s
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          ssl.certificate_authorities: []
  kube-apiserver-kubernetes/metrics:
    enabled: true
    streams:
      kubernetes.apiserver:
        enabled: true
        vars:
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://${env.KUBERNETES_SERVICE_HOST}:${env.KUBERNETES_SERVICE_PORT}
          leaderelection: true
          period: 30s
          ssl.certificate_authorities:
          - "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  kube-proxy-kubernetes/metrics:
    enabled: true
    streams:
      kubernetes.proxy:
        enabled: true
        vars:
          hosts:
          - localhost:10249
          period: 10s
  kube-scheduler-kubernetes/metrics:
    enabled: false
    streams:
      kubernetes.scheduler:
        enabled: false
        vars:
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://0.0.0.0:10259
          period: 10s
          ssl.verification_mode: none
          scheduler_label_key: component
          scheduler_label_value: kube-scheduler
  kube-controller-manager-kubernetes/metrics:
    enabled: false
    streams:
      kubernetes.controllermanager:
        enabled: false
        vars:
          bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          hosts:
          - https://0.0.0.0:10257
          period: 10s
          ssl.verification_mode: none
          controller_manager_label_key: component
          controller_manager_label_value: kube-controller-manager
  events-kubernetes/metrics:
    enabled: true
    streams:
      kubernetes.event:
        enabled: true
        vars:
          period: 10s
          add_metadata: true
          skip_older: true
          leaderelection: true
  container-logs-filestream:
    enabled: true
    streams:
      kubernetes.container_logs:
        enabled: true
        vars:
          paths:
          - "/var/log/containers/*${kubernetes.container.id}.log"
          symlinks: true
          data_stream.dataset: kubernetes.container_logs
          containerParserStream: all
          containerParserFormat: auto
          additionalParsersConfig: |
            # - ndjson:
            #     target: json
            #     ignore_decoding_error: true
            # - multiline:
            #     type: pattern
            #     pattern: '^\['
            #     negate: true
            #     match: after
          custom: ''
  audit-logs-filestream:
    enabled: false
    streams:
      kubernetes.audit_logs:
        enabled: false
        vars:
          paths:
          - "/var/log/kubernetes/kube-apiserver-audit.log"
